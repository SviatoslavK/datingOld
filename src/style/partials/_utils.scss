* {
    transition: all .5s;
    box-sizing: border-box;
}

// Media-queries mixin. Mobile first method
@mixin respond-to($media) {
    @if $media == desktop {
        @media (min-width: 1024px) and (max-width: 1365px) { @content; }
    }
    @else if $media == tablet {
        @media (min-width: 768px) and (max-width: 1023px) { @content; }
    }
    @else if $media == mobile {
        @media (min-width: 480px) and (max-width: 767px){ @content; }
    }
    @else if $media == small {
        @media (min-width: 320px) and (max-width: 479px) { @content; }
    }
}

@mixin background-img($img) {
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
    background-image: url($img);
}

@mixin square($size) {
    max-height: $size;
    height: $size;
    max-width: $size;
    width: $size;
}

// Utility classes
.clearfix:after {
    content: "";
    display: block;
    clear: both;
    margin: auto;
}
.container {
    width: 1170px;
    margin: 0 auto;
    font-family: 'Roboto', sans-serif;
    font-weight: 400;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    @include respond-to(desktop) {
        width: 960px;
    }
    @include respond-to(tablet) {
        width: 740px;
    }
    @include respond-to(mobile) {
        width: 460px;
    }
    @include respond-to(small) {
        width: 310px;
    }
    
}
